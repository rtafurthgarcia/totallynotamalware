package ch.hftm.controls.DTOs;

import java.net.InetAddress;
import java.net.UnknownHostException;

import ch.hftm.controls.DTOs.ComputerDto.GetComputerDto;
import ch.hftm.controls.DTOs.ComputerDto.NewComputerDto;
import ch.hftm.controls.DTOs.ComputerDto.UpdateComputerDto;
import ch.hftm.entities.Computer;
import jakarta.enterprise.context.ApplicationScoped;

@ApplicationScoped
public class ComputerMapper {
    public GetComputerDto toGetComputerDto(Computer computer) {
        return new GetComputerDto(
            computer.getId().toString(), 
            computer.getMacAddress(), 
            computer.getIpAddress().getHostAddress(),
            computer.getOs(),
            computer.getRunningWithPrivileges(),
            computer.getHarddrivesWithFreeSpace(),
            computer.getFreeRam(),
            computer.getUsedRam(),
            computer.getCpuName(),
            computer.getUserRunning(),
            computer.getBuildRunning(),
            computer.getLastActivity());
    }

    public Computer fromNewComputerDto(NewComputerDto newComputerDto) throws UnknownHostException{
        Computer computer = new Computer();

        computer
            .setMacAddress(newComputerDto.macAddress())
            .setIpAddress(InetAddress.getByName(newComputerDto.ipAddress()))
            .setOs(newComputerDto.os())
            .setRunningWithPrivileges(newComputerDto.runningWithPrivileges())
            .setHarddrivesWithFreeSpace(newComputerDto.hardDrives())
            .setFreeRam(newComputerDto.freeRam())
            .setUsedRam(newComputerDto.usedRam())
            .setCpuName(newComputerDto.cpuName())
            .setUserRunning(newComputerDto.userRunning())
            .setBuildRunning(newComputerDto.buildRunning());

        return computer;
    }

    public Computer fromUpdateComputerDto(Computer computer, UpdateComputerDto updateComputerDto) throws UnknownHostException{
        computer
            .setIpAddress(InetAddress.getByName(updateComputerDto.ipAddress()))
            .setRunningWithPrivileges(updateComputerDto.runningWithPrivileges())
            .setHarddrivesWithFreeSpace(updateComputerDto.hardDrives())
            .setFreeRam(updateComputerDto.freeRam())
            .setUsedRam(updateComputerDto.usedRam())
            .setBuildRunning(updateComputerDto.buildRunning());
                
        return computer;
    }
}
