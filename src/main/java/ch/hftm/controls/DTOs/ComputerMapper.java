package ch.hftm.controls.DTOs;

import java.time.LocalDateTime;

import org.bson.types.ObjectId;

import ch.hftm.controls.DTOs.ComputerDto.GetComputerDto;
import ch.hftm.controls.DTOs.ComputerDto.NewComputerDto;
import ch.hftm.controls.DTOs.ComputerDto.UpdateComputerDto;
import ch.hftm.entities.Computer;
import jakarta.enterprise.context.ApplicationScoped;

@ApplicationScoped
public class ComputerMapper {
    public GetComputerDto toGetComputerDto(Computer computer) {
        return new GetComputerDto(
            computer.id.toString(), 
            computer.macAddress, 
            computer.ipAddress,
            computer.os,
            computer.runningWithPrivileges,
            computer.harddrivesWithFreeSpace,
            computer.freeRam,
            computer.usedRam,
            computer.cpuName,
            computer.userRunning,
            computer.buildRunning,
            computer.lastActivity);
    }

    public Computer fromNewComputerDto(NewComputerDto newComputerDto) {
        Computer computer = new Computer();

        computer.id = new ObjectId();
        computer.macAddress = newComputerDto.macAddress();
        computer.ipAddress = newComputerDto.ipAddress();
        computer.os = newComputerDto.os();
        computer.runningWithPrivileges = newComputerDto.runningWithPrivileges();
        computer.harddrivesWithFreeSpace = newComputerDto.hardDrives();
        computer.freeRam = newComputerDto.freeRam();
        computer.usedRam = newComputerDto.usedRam();
        computer.cpuName = newComputerDto.cpuName();
        computer.userRunning = newComputerDto.userRunning();
        computer.buildRunning = newComputerDto.buildRunning();
        computer.lastActivity = LocalDateTime.now();
        
        return computer;
    }

    public Computer fromUpdateComputerDto(Computer computer, UpdateComputerDto updateComputerDto) {
        computer.ipAddress = updateComputerDto.ipAddress();
        computer.runningWithPrivileges = updateComputerDto.runningWithPrivileges();
        computer.harddrivesWithFreeSpace = updateComputerDto.hardDrives();
        computer.freeRam = updateComputerDto.freeRam();
        computer.usedRam = updateComputerDto.usedRam();
        computer.buildRunning = updateComputerDto.buildRunning();
        computer.lastActivity = LocalDateTime.now();
        
        return computer;
    }
}
